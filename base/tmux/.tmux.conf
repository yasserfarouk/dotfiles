set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'soyuka/tmux-current-pane-hostname'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'christoomey/vim-tmux-navigator'
# Server specific settings.
if-shell 'ls ~/.tmux.conf.local' 'source-file ~/.tmux.conf.local' ''

bind \\ split-window -h -c "#{pane_current_path}" # Split panes horizontal

# setting terminal for mac (may not work well in linux)
# set -g default-terminal "screen-256color" # colors!
# set -ga terminal-overrides ",*256col*:Tc"
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-kitty"
set -as terminal-features ",xterm-256color:RGB"
set -as terminal-features ',xterm-kitty:RGB'
# change prefix to C-a
set -g prefix C-space
bind C-space send-prefix # Pass on ctrl-a for other apps
unbind C-b
# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on
# for zezterm
set -g allow-passthrough on

setw -g mouse on

setw -g xterm-keys on

set -s escape-time 10                     # faster command sequences
set -sg repeat-time 300                   # increase repeat timeout
set -s focus-events on

setw -q -g utf8 on

set -g history-limit 5000                 # boost history

set -g base-index 1 # Numbering of windows
setw -g pane-base-index 1 # Numbering of Panes
set-window-option -g pane-base-index 1

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

# do not detach when the last window is closed
set-option -g detach-on-destroy off
# bind r to reload tmux conf
bind r source-file ~/.tmux.conf \; display "Reloaded!" # Reload with ctrl-r

bind - split-window -v -c "#{pane_current_path}" # Split panes vertically

# unbind -n C--
# pane navigation
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Make semicolon behave like colon
bind-key \; command-prompt

# bind-key J resize-pane -D 5
# bind-key K resize-pane -U 5
# bind-key H resize-pane -L 5
# bind-key L resize-pane -R 5

# bind C-j resize-pane -D 5
# bind C-k resize-pane -U 5
# bind C-h resize-pane -L 5
# bind C-l resize-pane -R 5
# Use Alt-vim keys without prefix key to switch panes
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

# Vim style pane selection
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n C-t new-window

# pane resizing
# bind  H resize-pane -L 2
# bind  J resize-pane -D 2
# bind  K resize-pane -U 2
# bind  L resize-pane -R 2
bind -n M-Left resize-pane -L 2
bind -n M-Right resize-pane -R 3
bind -n M-Up resize-pane -U 2
bind -n M-Down resize-pane -D 2


# window navigation
bind Tab last-window        # move to last active window

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
# setw -g monitor-activity on
# set -g visual-activity on

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# other settings

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-;' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# session selector
bind t display-popup -E      "zsh"
bind -n M-t display-popup -E "zsh"
bind v display-popup -E      "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --height=100% --reverse | xargs tmux join-pane -t"
bind -n M-v display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --height=100% --reverse | xargs tmux join-pane -t"
bind i display-popup -E      "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --height=100% --reverse | xargs tmux switch-client -t"
bind -n M-i display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --height=100% --reverse | xargs tmux switch-client -t"
bind w display-popup -E      "tmux list-sessions | awk '{print \$1}' | rg ':' -r '' | fzf --multi --height=100% --no-preview | xargs -n 1 tmux kill-session -t"
bind -n M-w display-popup -E "tmux list-sessions | awk '{print \$1}' | rg ':' -r '' | fzf --multi --height=100% --no-preview | xargs -n 1 tmux kill-session -t"
bind g display-popup -E      "{ fd . --type d --full-path $HOME/code --max-depth 2 & fd . --type d --full-path $HOME/code/papers --max-depth 4; } | fzf --multi --height=100% --no-preview | xargs -I {} tmuxinator any {}"
bind -n M-g display-popup -E "{ fd . --type d --full-path $HOME/code --max-depth 2 & fd . --type d --full-path $HOME/code/papers --max-depth 4; } | fzf --multi --height=100% --no-preview | xargs -I {} tmuxinator any {}"
# kill panes, windows and sessions
bind-key X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n | echo  last session \\\; kill-session -t \"#S\"'"
bind -n M-z resize-pane -Z
bind -n M-Q kill-pane
bind -n M-W kill-window
bind -n M-x confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n | echo last session\\\; kill-session -t \"#S\"'"
bind -n M-p switch-client -p
bind -n M-n switch-client -n
bind -n M-tab switch-client -n
# clear screen
bind C-l send-keys 'C-l'
# status bar
set-option -g status on
set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-position bottom
# set-option -g status-style fg=colour136,bg=colour235
set-option -g status-style fg=yellow
set-option -g status-style bg=default
set-option -g status-left-length 60
set-option -g status-left-style default
set-option -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bright]#S #[default]"
set-option -g status-right-length 70
set-option -g status-right-style default
set-option -g status-right "#[fg=blue,bg=default,bright]#(tmux-mem-cpu-load -a 0) "
set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default
set-window-option -g window-status-current-style fg=colour166
set-window-option -g window-status-current-style bg=default
# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# set -g @continuum-boot-options 'Alacritty'
# set -g @continuum-boot 'on'
# run-shell $HOME/.tmux.plugins/tmux-resurrect
# run-shell $HOME/.tmux.plugins/tmux-continuum

# set -g @super-fingers-key f
new-session -s my_session \; split-window -v \; attach -t my_session \; setw -g pane-base-cmd "zsh"
run '~/.tmux/plugins/tpm/tpm'
