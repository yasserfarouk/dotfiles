" source ~/.vimrc
let mapleader=" "
set easymotion
set ideajoin
set surround
set commentary
set multiple-cursors
set ReplaceWithRegister
set argtextobj
set exchange
set textobj-entire
set highlightedyank

map ; :
map <leader>w :wa
set mps+=<:>
" switch between current and last buffer
"nmap <leader>. <C-^>
nnoremap <leader>. :action VimFilePrevious<cr>
nmap == :action ReformatCode<CR>
nmap <leader>q :action CloseContent<CR>

" nmap csw' :action Macro.surround_with_single_quote<CR>
" nmap csw" :action Macro.surround_with_double_quote<CR>
" nmap ds' :action Macro.surround_undo_single_quote<CR>
" nmap ds" :action Macro.surround_undo_double_quote<CR>
" nmap cs"' :action Macro.surround_double_to_single_quote<CR>
" remove extra whiteleader
nmap <leader>aw :%s/\s\+$<CR>

nnoremap <leader>l :action EditorToggleShowWhiteleaders<cr>

" code navigation
nmap gd :action GotoDeclaration<cr>zz
nnoremap <leader>[ :action GotoSuperMethod<cr>
nnoremap gu :action FindUsages<cr>
nnoremap gt :action GotoTest<cr>
nnoremap <leader>k :action HighlightUsagesInFile<cr>
nnoremap <leader>rc :action RunClass<cr>
nnoremap <leader>rn :action Run<cr>
nnoremap <leader>tf :action DebugClass<cr>
nnoremap <leader>tn :action Debug<cr>
nnoremap <leader>c :action CheckStyleCurrentFileAction<cr>
nnoremap <backslash> za
nnoremap K :action QuickDocumentation<cr>

" code refactoring
nnoremap <leader>rr :action RenameElement<cr>
nnoremap <F2> :action RenameElement<cr>

" unimpaired mappings
nnoremap [<leader> O<esc>j
nnoremap ]<leader> o<esc>k
nnoremap [q :action PreviousOccurence<cr>
nnoremap ]q :action NextOccurence<cr>
nnoremap [m :action MethodUp<cr>
nnoremap ]m :action MethodDown<cr>
nnoremap [c :action VcsShowPrevChangeMarker<cr>
nnoremap ]c :action VcsShowNextChangeMarker<cr>


" built-in navigation to navigated items works better
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>
" but preserve ideavim defaults
nnoremap g<c-o> <c-o>
nnoremap g<c-i> <c-i>

" built in search looks better
nnoremap g/ :action Find<cr>
" Normal mapping ----------------------------------------------------------{{{
" nnoremap ; :
nnoremap <silent>== ggVG=
nnoremap <silent> <leader>rws :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s<CR><Esc><C-o>
nmap <leader>mt <plug>(MergetoolToggle)

nnoremap <leader>q :wq<CR>

nnoremap <backslash> za

noremap  <silent> <Home> g<Home>
noremap  <silent> <End>  g<End>

" copy to end using Y because we cut to end with D
" nnoremap <A-O> <S-O><Esc>j
nnoremap Y y$

"  copy current file path to clipboard
nnoremap <leader>cp :let @+= expand("%") <cr>

"  Search mappings: These will make it so that going to the next one in a
"  search will center on the line it is found in.
nnoremap n nzzzv
nnoremap N Nzzzv

"  removing search highlighting using <esc>
nnoremap <silent> <esc> :noh<cr>

"  a map to delete to the blackhole _ register (no cutting)
nnoremap <leader>d "_d
nnoremap <leader>D "_D

" setting working directory
nnoremap <leader>cd :cd %:p:h<cr>

" Buffer management
nnoremap <leader>bd :bd<CR>
" black and isort

nnoremap <leader>xi :!isort %<CR>
nnoremap <leader>xb :!black %<CR>
nnoremap <leader>xB :!black %<CR>

" allow shift arrows to copy
nnoremap <S-Down> vj
nnoremap <S-Up> vk
nnoremap <S-Left> vh
nnoremap <S-Right> vl

" insert from mac keyboard in normal mode
if has('macunix')
" pbcopy for OSX copy/paste
	nmap <D-v> :r !pbpaste<cr>
endif

noremap <silent> <Up>    :wincmd k<CR>
noremap <silent> <Down>  :wincmd j<CR>
noremap <silent> <Left>  :wincmd h<CR>
noremap <silent> <Right> :wincmd l<CR>
noremap <silent> <leader><leader>o :wincmd o<CR>
" noremap <silent> <c-k>    :wincmd k<CR>
" noremap <silent> <c-j>  :wincmd j<CR>
" noremap <silent> <c-h>  :wincmd h<CR>
" noremap <silent> <c-l> :wincmd l<CR>

noremap <silent> <C-s> :wincmd s<CR>
noremap <silent> <C-\> :wincmd v<CR>
" Use 'H' and 'L' keys to move to start/end of the line
" noremap H ^
" noremap L $

" Recenter when jump back and forward
nnoremap <C-o> <C-o>zz
nnoremap <C-i> <C-i>zz

" z+, moves next line below the window
" z-, moves next line above the window
nnoremap z- z^

" Tag matching list
nnoremap <silent> ]t :tnext<CR>
nnoremap <silent> [t :tprev<CR>
nnoremap <silent> ]T :tlast<CR>
nnoremap <silent> [T :tfirst<CR>

" Tags in preview window
nnoremap <silent> ]p :ptnext<CR>
nnoremap <silent> [p :ptprev<CR>
nnoremap <silent> ]P :ptlast<CR>
nnoremap <silent> [P :ptfirst<CR>

" Center screen after navigation shortcuts
nnoremap } }zvzz
nnoremap { {zvzz

nnoremap ]] ]]zvzz
nnoremap [[ [[zvzz
nnoremap [] []zvzz
nnoremap ][ ][zvzz
" Drop into insert mode on Backspace
nnoremap <BS> i<BS>
" Close all folds except the one under the cursor, and center the screen
nnoremap <leader>z zMzvzz
" Kill buffer
if has('macunix')
	" Open current directory in Finder
	nnoremap <leader>o :silent exec "!open %:p:h" \| redraw!<CR>
endif

function! GoogleSearch()
     let searchterm = getreg("g")
     silent! exec "silent! !chrome \"http://google.com/search?q=" . searchterm . "\" &"
endfunction
vnoremap <leader>g "gy<Esc>:call GoogleSearch()<CR>

" Close all readonly buffers with just a "q" keystroke, otherwise "q" is used to record macros in a normal mode
nnoremap  <expr> q &readonly ? ":quit\<CR>" : "q"

" Save and quit
nnoremap <silent> <leader>w :wall<CR>
" nnoremap ZZ :update! \| QuitWindow<CR>

" Save and quit for multiple buffers
nnoremap <silent> <leader>W :wall<CR>
nnoremap <silent> <leader>Q :confirm qall<CR>
nnoremap <silent> ZX :confirm xall<CR>
nnoremap <leader>bd :q
" Insert mapping ----------------------------------------------------------{{{
"  duplicate a line
" Shift-Enter to start editing new line without splitting the current one
inoremap <S-CR> <C-o>o
inoremap <C-d> <Esc>yyPji

"  Get out of insert mode using jk or jj
inoremap jk <Esc>
" inoremap jj <Esc>

"  Navigate between display lines
inoremap <silent> <Home> <C-o>g<Home>
inoremap <silent> <End>  <C-o>g<End>

"  insert mode
" inoremap <C-a> <C-o>:call <SID>home()<CR>
inoremap <C-e> <End>
inoremap <M-Left> <C-o>ba
inoremap <M-Right> <C-o>wa

" " Split management
" inoremap <C-h> <ESC><C-w>h
" inoremap <C-j> <ESC><C-w>j
" inoremap <C-k> <ESC><C-w>k
" inoremap <C-l> <ESC><C-w>l

" ALlow shift-arrows to be used for selection
inoremap <S-Down> <Esc>lvj
inoremap <S-Up> <Esc>lvk
inoremap <S-Left> <Esc>lvh
inoremap <S-Right> <Esc>lvl

" }}}

" Visual mapping ----------------------------------------------------------{{{

" vmap R <Plug>ReplaceOperator
vnoremap <S-Down> j
vnoremap <S-Up> k
vnoremap <S-Left> h
vnoremap <S-Right> l

vmap < <gv
vmap > >gv
vnoremap <leader>d "_d
" vnoremap <leader>ga <Plug>(EasyAlign)
vnoremap <C-c> "*y<CR>
vnoremap y "*y<CR>
vnoremap y myy`y
vnoremap Y myY`y
vnoremap // y/<C-R>"<CR>

"  Backslash to toggle folds.
vnoremap \ za

if has('macunix')
" pbcopy for OSX copy/paste
	vmap <D-v> :r !pbpaste<CR>
	vmap <D-c> :w !pbcopy<CR><CR>
endif

"  Vmap for maintain Visual Mode after shifting > and <
vmap < <gv
vmap > >gv

"  Move visual block
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
" }}}

"  C mappings -----------------------------------------------------------{{{
"  Basic cursor movement and deletion keybindings from emacs, for vim.
"  command line mode
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-d> <Del>
cnoremap <C-h> <BS>
" cnoremap <A-j> :call split_line_text_at_cursor()<CR>

"  no one is really happy until you have this shortcuts
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall
"  cnoremap <C-P> <C-R>=expand("%:p:h") . "/" <CR>


"  allow saving to protected file using sudo without leaving vim
cmap w!! w !sudo tee % >/dev/null
" }}}

